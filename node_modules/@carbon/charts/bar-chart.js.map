{"version":3,"file":"bar-chart.js","sourceRoot":"","sources":["src/bar-chart.ts"],"names":[],"mappings":"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","sourcesContent":["// D3 Imports\nimport { select } from \"d3-selection\";\nimport { scaleBand, ScaleBand } from \"d3-scale\";\nimport { min } from \"d3-array\";\n\nimport { BaseAxisChart } from \"./base-axis-chart\";\nimport { StackedBarChart } from \"./stacked-bar-chart\";\nimport * as Configuration from \"./configuration\";\nimport { ChartConfig, BarChartOptions, ChartType } from \"./configuration\";\n\nimport { Tools } from \"./tools\";\n\nconst getYMin = configs => {\n\tconst { datasets } = configs.data;\n\tconst { scales } = configs.options;\n\tlet yMin;\n\n\tif (datasets.length === 1) {\n\t\tyMin = min(datasets[0].data);\n\t} else {\n\t\tyMin = min(datasets, (d: any) => (min(d.data)));\n\t}\n\n\tif (scales.y.yMinAdjuster) {\n\t\tyMin = scales.y.yMinAdjuster(yMin);\n\t}\n\n\treturn yMin;\n};\n\n// returns the configured max width or the calculated bandwidth\n// whichever is lower\n// defaults to the calculated bandwidth if no maxWidth is defined\nexport const getBarWidth = chart => {\n\tconst width = Tools.getProperty(chart.options, \"bars\", \"width\");\n\tconst maxWidth = Tools.getProperty(chart.options, \"bars\", \"maxWidth\");\n\tconst currentBandWidth = chart.x.bandwidth();\n\n\tif (width) {\n\t\tif (maxWidth) {\n\t\t\tif (width <= maxWidth) {\n\t\t\t\treturn width;\n\t\t\t}\n\n\t\t\treturn maxWidth;\n\t\t}\n\n\t\treturn width;\n\t}\n\tif (!maxWidth) {\n\t\treturn currentBandWidth;\n\t}\n\tif (currentBandWidth <= maxWidth) {\n\t\treturn currentBandWidth;\n\t}\n\treturn maxWidth;\n};\n\n// returns true if the calculated bandwidth is greater than the maxWidth (if defined)\n// i.e. if we should be constraining ourselves to a specific bar width\nexport const isWidthConstrained = chart => {\n\tconst maxWidth = Tools.getProperty(chart.options, \"bars\", \"maxWidth\");\n\tconst currentBandWidth = chart.x.bandwidth();\n\n\tif (!maxWidth) {\n\t\treturn false;\n\t}\n\tif (currentBandWidth <= maxWidth) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport class BarChart extends BaseAxisChart {\n\tx1?: ScaleBand<any>;\n\n\toptions: BarChartOptions;\n\n\tconstructor(holder: Element, configs: ChartConfig<BarChartOptions>) {\n\t\t// If this is a stacked bar chart, change the object prototype\n\t\tif (configs.options.scales.y.stacked) {\n\t\t\tif (getYMin(configs) >= 0) {\n\t\t\t\treturn new StackedBarChart(holder, configs);\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Negative values are not supported in StackedBarChart, using GroupedBarChart instead to render!\");\n\t\t\t}\n\t\t}\n\n\t\tsuper(holder, configs);\n\n\t\t// initialize options\n\t\tif (configs.options) {\n\t\t\tthis.options = Tools.merge({}, Configuration.options.BAR, configs.options);\n\t\t} else {\n\t\t\tthis.options = Tools.merge({}, Configuration.options.BAR);\n\t\t}\n\n\t\t// To be used for combo chart instances of a bar chart\n\t\tconst { axis } = configs.options;\n\t\tif (axis) {\n\t\t\tconst { bar: margins } = Configuration.charts.margin;\n\t\t\tconst chartSize = this.getChartSize();\n\t\t\tconst width = chartSize.width - margins.left - margins.right;\n\t\t\tthis.x1 = scaleBand().rangeRound([0, width]).padding(Configuration.bars.spacing.bars);\n\t\t\tthis.x1.domain(this.data.datasets.map(dataset => dataset.label))\n\t\t\t\t.rangeRound([0, getBarWidth(this)]);\n\t\t}\n\n\t\tthis.options.type = ChartType.BAR;\n\t}\n\n\tsetXScale(xScale?: any) {\n\t\tconst { bar: margins } = Configuration.charts.margin;\n\t\tconst chartSize = this.getChartSize();\n\t\tconst width = chartSize.width - margins.left - margins.right;\n\n\t\tif (xScale) {\n\t\t\tthis.x = xScale;\n\t\t} else {\n\t\t\tthis.x = scaleBand().rangeRound([0, width]).padding(Configuration.bars.spacing.datasets);\n\t\t\tthis.x.domain(this.displayData.labels);\n\t\t}\n\n\t\t// if it's a grouped bar, use additoinal padding so the bars don't group up\n\t\tif (this.displayData.datasets.length > 1) {\n\t\t\tthis.x1 = scaleBand().rangeRound([0, width]).padding(Configuration.bars.spacing.bars);\n\t\t} else {\n\t\t\tthis.x1 = scaleBand().rangeRound([0, width]);\n\t\t}\n\n\t\tthis.x1.domain(this.displayData.datasets.map(dataset => dataset.label))\n\t\t\t.rangeRound([0, getBarWidth(this)]);\n\t}\n\n\tgetBarX(d) {\n\t\tif (!isWidthConstrained(this)) {\n\t\t\treturn this.x1(d.datasetLabel);\n\t\t}\n\n\t\treturn (this.x.bandwidth() / 2) - (Tools.getProperty(this.options, \"bars\", \"maxWidth\") / 2);\n\t}\n\n\tdraw() {\n\t\tthis.innerWrap.style(\"width\", \"100%\")\n\t\t\t.style(\"height\", \"100%\");\n\n\t\tconst { bar: margins } = Configuration.charts.margin;\n\n\t\tconst chartSize = this.getChartSize();\n\t\tconst width = chartSize.width - margins.left - margins.right;\n\t\tconst height = chartSize.height - this.getBBox(\".x.axis\").height;\n\n\t\tconst gBars = this.innerWrap\n\t\t\t.attr(\"transform\", `translate(${margins.left}, ${margins.top})`)\n\t\t\t.append(\"g\")\n\t\t\t.classed(\"bars\", true)\n\t\t\t.attr(\"width\", width);\n\n\t\tgBars.selectAll(\"g\")\n\t\t\t.data(this.displayData.labels)\n\t\t\t.enter()\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"transform\", d => `translate(${this.x(d)}, 0)`)\n\t\t\t\t.selectAll(\"rect.bar\")\n\t\t\t\t.data((d, index) => this.addLabelsToDataPoints(d, index))\n\t\t\t\t\t.enter()\n\t\t\t\t\t\t.append(\"rect\")\n\t\t\t\t\t\t.classed(\"bar\", true)\n\t\t\t\t\t\t.attr(\"x\", this.getBarX.bind(this))\n\t\t\t\t\t\t.attr(\"y\", d => this.y(Math.max(0, d.value)))\n\t\t\t\t\t\t.attr(\"width\", this.x1.bandwidth())\n\t\t\t\t\t\t.attr(\"height\", d => Math.abs(this.y(d.value) - this.y(0)))\n\t\t\t\t\t\t.attr(\"fill\", d => this.getFillColor(d.datasetLabel, d.label, d.value))\n\t\t\t\t\t\t.attr(\"stroke\", d => this.options.accessibility ? this.getStrokeColor(d.datasetLabel, d.label, d.value) : null)\n\t\t\t\t\t\t.attr(\"stroke-width\", Configuration.bars.default.strokeWidth)\n\t\t\t\t\t\t.attr(\"stroke-opacity\", d => this.options.accessibility ? 1 : 0);\n\n\t\t// Hide the overlay\n\t\tthis.chartOverlay.hide();\n\n\t\t// Dispatch the load event\n\t\tthis.dispatchEvent(\"load\");\n\t}\n\n\tinterpolateValues(newData: any) {\n\t\tconst { bar: margins } = Configuration.charts.margin;\n\t\tconst chartSize = this.getChartSize();\n\t\tconst width = chartSize.width - margins.left - margins.right;\n\t\tconst height = chartSize.height - this.getBBox(\".x.axis\").height;\n\n\t\t// Apply new data to the bars\n\t\tconst g = this.innerWrap.select(\"g.bars\")\n\t\t\t.attr(\"width\", width)\n\t\t\t.selectAll(\"g\")\n\t\t\t.data(this.displayData.labels);\n\n\t\tconst rect = g.selectAll(\"rect.bar\")\n\t\t\t.data((d, index) => this.addLabelsToDataPoints(d, index));\n\n\t\tthis.updateElements(true, rect, g);\n\n\t\t// Add bar groups that need to be added now\n\t\tconst addedBars = g.enter()\n\t\t\t.append(\"g\")\n\t\t\t.classed(\"bars\", true)\n\t\t\t.attr(\"transform\", d => `translate(${this.x(d)}, 0)`);\n\n\t\t// Add bars that need to be added now\n\t\tg.selectAll(\"rect.bar\")\n\t\t\t.data((d, index) => this.addLabelsToDataPoints(d, index))\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"class\", \"bar\")\n\t\t\t.attr(\"x\", this.getBarX.bind(this))\n\t\t\t.attr(\"y\", d => this.y(Math.max(0, d.value)))\n\t\t\t.attr(\"width\", this.x1.bandwidth())\n\t\t\t.attr(\"height\", d => Math.abs(this.y(d.value) - this.y(0)))\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.transition(this.getFillTransition())\n\t\t\t.attr(\"fill\", d => this.getFillColor(d.datasetLabel, d.label, d.value))\n\t\t\t.style(\"opacity\", 1)\n\t\t\t.attr(\"stroke\", (d: any) => this.getStrokeColor(d.datasetLabel, d.label, d.value))\n\t\t\t.attr(\"stroke-width\", Configuration.bars.default.strokeWidth);\n\n\t\taddedBars.selectAll(\"rect.bar\")\n\t\t\t.data((d, index) => this.addLabelsToDataPoints(d, index))\n\t\t\t.enter()\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"class\", \"bar\")\n\t\t\t.attr(\"x\", this.getBarX.bind(this))\n\t\t\t.attr(\"y\", d => this.y(Math.max(0, d.value)))\n\t\t\t.attr(\"width\", this.x1.bandwidth())\n\t\t\t.attr(\"height\", d => Math.abs(this.y(d.value) - this.y(0)))\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.transition(this.getFillTransition())\n\t\t\t.attr(\"fill\", d => this.getFillColor(d.datasetLabel, d.label, d.value))\n\t\t\t.style(\"opacity\", 1)\n\t\t\t.attr(\"stroke\", (d: any) => this.getStrokeColor(d.datasetLabel, d.label, d.value))\n\t\t\t.attr(\"stroke-width\", Configuration.bars.default.strokeWidth);\n\n\t\t// Remove bar groups are no longer needed\n\t\tg.exit()\n\t\t\t.transition(this.getDefaultTransition())\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove();\n\n\t\t// Remove bars that are no longer needed\n\t\trect.exit()\n\t\t\t.transition(this.getDefaultTransition())\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove();\n\n\t\t// Add slice hover actions, and clear any slice borders present\n\t\tthis.addDataPointEventListener();\n\n\t\t// Hide the overlay\n\t\tthis.chartOverlay.hide();\n\n\t\t// Dispatch the update event\n\t\tthis.dispatchEvent(\"update\");\n\t}\n\n\tupdateElements(animate: boolean, rect?: any, g?: any) {\n\t\tif (!rect) {\n\t\t\trect = this.innerWrap.selectAll(\"rect.bar\");\n\t\t}\n\n\t\tif (g) {\n\t\t\tg.transition(animate ? this.getDefaultTransition() : this.getInstantTransition())\n\t\t\t\t.attr(\"transform\", d => `translate(${this.x(d)}, 0)`)\n\t\t\t\t.style(\"opacity\", 1);\n\t\t}\n\n\t\t// Update existing bars\n\t\trect\n\t\t\t.transition(animate ? this.getFillTransition() : this.getInstantTransition())\n\t\t\t// TODO\n\t\t\t// .ease(d3.easeCircle)\n\t\t\t.style(\"opacity\", 1)\n\t\t\t.attr(\"x\", this.getBarX.bind(this))\n\t\t\t.attr(\"y\", d => this.y(Math.max(0, d.value)))\n\t\t\t.attr(\"width\", this.x1.bandwidth())\n\t\t\t.attr(\"height\", d => Math.abs(this.y(d.value) - this.y(0)))\n\t\t\t.attr(\"fill\", d => this.getFillColor(d.datasetLabel, d.label, d.value))\n\t\t\t.attr(\"stroke\", d => this.options.accessibility ? this.getStrokeColor(d.datasetLabel, d.label, d.value) : null);\n\t}\n\n\tresizeChart() {\n\t\tconst actualChartSize: any = this.getChartSize(this.container);\n\t\tconst dimensionToUseForScale = Math.min(actualChartSize.width, actualChartSize.height);\n\n\t\t// Resize the SVG\n\t\tselect(this.holder).select(\"svg\")\n\t\t\t.attr(\"width\", `${dimensionToUseForScale}px`)\n\t\t\t.attr(\"height\", `${dimensionToUseForScale}px`);\n\n\t\tthis.updateXandYGrid(true);\n\t\t// Scale out the domains\n\t\tthis.setXScale();\n\t\tthis.setYScale();\n\n\t\t// Set the x & y axis as well as their labels\n\t\tthis.setXAxis(true);\n\t\tthis.setYAxis(true);\n\n\t\t// Apply new data to the bars\n\t\tconst g = this.innerWrap.selectAll(\"g.bars g\");\n\t\tthis.updateElements(false, null, g);\n\n\t\tsuper.resizeChart();\n\t}\n\n\taddDataPointEventListener() {\n\t\tconst self = this;\n\t\tconst { accessibility } = this.options;\n\n\t\tthis.svg.selectAll(\"rect.bar\")\n\t\t\t.on(\"click\", d => self.dispatchEvent(\"bar-onClick\", d))\n\t\t\t.on(\"mouseover\", function(d) {\n\t\t\t\tselect(this)\n\t\t\t\t\t.attr(\"stroke-width\", Configuration.bars.mouseover.strokeWidth)\n\t\t\t\t\t.attr(\"stroke\", self.getStrokeColor(d.datasetLabel, d.label, d.value))\n\t\t\t\t\t.attr(\"stroke-opacity\", Configuration.bars.mouseover.strokeOpacity);\n\n\t\t\t\tself.showTooltip(d, this);\n\t\t\t\tself.reduceOpacity(this);\n\t\t\t})\n\t\t\t.on(\"mousemove\", d => this.tooltip.positionTooltip())\n\t\t\t.on(\"mouseout\", function(d) {\n\t\t\t\tconst { strokeWidth, strokeWidthAccessible } = Configuration.bars.mouseout;\n\t\t\t\tselect(this)\n\t\t\t\t\t.attr(\"stroke-width\", accessibility ? strokeWidthAccessible : strokeWidth)\n\t\t\t\t\t.attr(\"stroke\", accessibility ? self.getStrokeColor(d.datasetLabel, d.label, d.value) : \"none\")\n\t\t\t\t\t.attr(\"stroke-opacity\", Configuration.bars.mouseout.strokeOpacity);\n\n\t\t\t\tself.hideTooltip();\n\t\t\t});\n\t}\n}\n"]}