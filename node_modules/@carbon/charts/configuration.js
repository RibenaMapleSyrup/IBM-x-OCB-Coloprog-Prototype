import { Tools } from "./tools";
import * as colorPalettes from "./services/colorPalettes";
/*
 **********************
 * chart config enums *
 **********************
 */
/**
 * enum of all supported charts
 */
export var ChartType;
(function (ChartType) {
    ChartType["BAR"] = "bar";
    ChartType["LINE"] = "line";
    ChartType["SCATTER"] = "scatter";
    ChartType["PIE"] = "pie";
    ChartType["DONUT"] = "donut";
    ChartType["COMBO"] = "combo";
})(ChartType || (ChartType = {}));
/**
 * enum of all supported chart themes
 */
export var ChartTheme;
(function (ChartTheme) {
    ChartTheme["WHITE"] = "white";
    ChartTheme["G100"] = "g100";
    ChartTheme["G90"] = "g90";
    ChartTheme["G10"] = "g10";
})(ChartTheme || (ChartTheme = {}));
/**
 * enum of all possible tooltip sizes
 */
export var TooltipSize;
(function (TooltipSize) {
    TooltipSize["COMPACT"] = "compact";
    TooltipSize["FULL"] = "";
})(TooltipSize || (TooltipSize = {}));
/**
 * enum of all possible threshold themes
 */
export var ThresholdTheme;
(function (ThresholdTheme) {
    ThresholdTheme["SUCCESS"] = "success";
    ThresholdTheme["ERROR"] = "error";
    ThresholdTheme["WARNING"] = "warning";
})(ThresholdTheme || (ThresholdTheme = {}));
/**
 * Base chart options common to any chart
 */
var baseOptions = {
    legendClickable: true,
    containerResizable: true,
    colors: colorPalettes.DEFAULT,
    tooltip: {
        size: TooltipSize.FULL,
        formatter: null,
        targetsToSkip: ["rect", "circle", "path"]
    },
    theme: ChartTheme.WHITE,
    overlay: {
        types: {
            loading: "loading",
            noData: "noData"
        },
        innerHTML: {
            loading: "\n\t\t\t<div class=\"ccharts-overlay-content\">\n\t\t\t\t<div data-loading class=\"bx--loading bx--loading--small\">\n\t\t\t\t\t<svg class=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n\t\t\t\t\t\t<title>Loading</title>\n\t\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"37.5\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\n\t\t\t\t<p>Loading</p>\n\t\t\t</div>\n\t\t\t",
            noData: "\n\t\t\t<div class=\"ccharts-overlay-content\">\n\t\t\t\tNo data available\n\t\t\t</div>\n\t\t\t"
        }
    }
};
/**
 * Options specific to pie charts
 */
var pieOptions = Tools.merge({}, baseOptions);
var donutOptions = Tools.merge({}, baseOptions);
/**
 * Options common to any chart with an axis
 */
var axisOptions = Tools.merge({}, baseOptions, {
    scales: {
        x: {
            domain: null,
            ticks: 5
        },
        y: {
            domain: null,
            ticks: 5
        },
        ySecondary: {
            domain: null,
            ticks: 10
        }
    }
});
/**
 * options specific to line charts
 */
var lineOptions = Tools.merge({}, axisOptions, {
    points: {
        // default point radius to 3
        radius: 3
    }
});
/**
 * options specific to line charts
 */
var scatterOptions = Tools.merge({}, axisOptions, {
    points: {
        // default point radius to 4
        radius: 4,
        fillOpacity: 0.3
    }
});
/**
 * options specific to bar charts
 */
var barOptions = Tools.merge({}, axisOptions);
/**
 * options specific to bar charts
 */
var stackedBarOptions = Tools.merge({}, barOptions);
/**
 * Options specific to combo charts.
 *
 */
var comboOptions = Tools.merge({}, axisOptions, barOptions, lineOptions, scatterOptions);
export var options = {
    BASE: baseOptions,
    AXIS: axisOptions,
    LINE: lineOptions,
    SCATTER: scatterOptions,
    BAR: barOptions,
    STACKED_BAR: stackedBarOptions,
    COMBO: comboOptions,
    PIE: pieOptions,
    DONUT: donutOptions
};
/*
 ********************************************
 * Internal (non-user configurable) options *
 ********************************************
 */
/**
 * General chart options. margins, min/max widths, etc
 */
export var charts = {
    margin: {
        top: 20,
        bottom: 60,
        left: 60,
        right: 20,
        bar: {
            top: 0,
            right: -40,
            bottom: 50,
            left: 40
        },
        line: {
            top: 0,
            right: -40,
            bottom: 50,
            left: 40
        }
    },
    resetOpacity: {
        opacity: 1,
        circle: {
            fill: "white"
        },
        outline: "grey"
    },
    reduceOpacity: {
        opacity: 0.25,
        outline: "grey"
    },
    points: {
        radius: 3
    },
    patternFills: {
        width: 20,
        height: 20
    },
    minWidth: 150,
    widthBreak: 600,
    marginForLegendTop: 40,
    title: {
        marginBottom: 8
    },
    magicRatio: 0.7,
    magicMoreForY2Axis: 70,
    axisCharts: {
        minWidth: 100,
        minHeight: 100
    }
};
/**
 * Options to render scales to spec
 */
export var scales = {
    maxWidthOfAxisLabel: 175,
    maxNumOfAxisLabelLetters: 60,
    yAxisAngle: -90,
    xAxisAngle: -45,
    domain: {
        color: "#959595",
        strokeWidth: 2
    },
    dx: "-1em",
    label: {
        dy: "1em"
    },
    tick: {
        dy: "0.5em",
        widthAdditionY: 25,
        widthAdditionY2: 15,
        heightAddition: 16,
        lineHeight: 1.1
    },
    magicDy1: "0.71em",
    magicY1: 9,
    magicX1: -4,
    y: {
        numberOfTicks: 5,
        thresholds: {
            colors: {
                "danger": "rgba(255, 39, 41, 0.1)",
                "success": "rgba(0, 212, 117, 0.1)",
                "warning": "rgba(255, 214, 0, 0.1)"
            }
        }
    },
    x: {
        numberOfTicks: 5,
        padding: 0.2
    },
    y2: {
        numberOfTicks: 5
    }
};
/**
 * Grid options
 */
export var grid = {
    strokeColor: "#ECEEEF"
};
/**
 * Options for bar behaviour
 */
export var bars = {
    mouseover: {
        strokeWidth: 4,
        strokeOpacity: 0.5
    },
    mouseout: {
        strokeWidth: 0,
        strokeWidthAccessible: 2,
        strokeOpacity: 1
    },
    default: {
        strokeWidth: 2
    },
    spacing: {
        bars: 0.2,
        datasets: 0.25
    },
    bars: {
        maxWidth: null
    }
};
/**
 * Options for line behaviour
 */
export var lines = {
    points: {
        strokeWidth: 4,
        minNonFilledRadius: 3,
        mouseover: {
            strokeWidth: 4,
            strokeOpacity: 0.5,
            fillOpacity: 1,
        },
        mouseout: {
            strokeWidth: 0,
            strokeWidthAccessible: 2,
            strokeOpacity: 1
        }
    }
};
/**
 * Options for pie behaviour
 */
export var pie = {
    maxWidth: 516.6,
    mouseover: {
        strokeWidth: 6,
        strokeOpacity: 0.5
    },
    mouseout: {
        strokeWidth: 0,
        strokeOpacity: 1
    },
    sliceLimit: 6,
    label: {
        dy: ".32em",
        margin: 8,
        other: "Other",
        fontSize: 12
    },
    callout: {
        sliceDegreeThreshold: 5,
        calloutOffsetX: 15,
        calloutOffsetY: 12,
        calloutTextMargin: 2,
        horizontalLineLength: 8,
        direction: {
            LEFT: "left",
            RIGHT: "right"
        }
    },
    default: {
        strokeWidth: 2
    },
    paddingLeft: 20
};
/**
 * Options for donut behaviour
 */
export var donut = {
    centerText: {
        title: {
            y: 22
        },
        breakpoint: 175,
        magicScaleRatio: 2.5,
        numberFontSize: 24,
        titleFontSize: 15
    }
};
/**
 * Legend configuration
 */
export var legend = {
    countBreak: 4,
    fontSize: 12,
    wrapperHeight: "40px",
    widthTolerance: 15,
    hoverShadowSize: "3px",
    hoverShadowTransparency: 0.2,
    margin: {
        top: 19
    },
    active: {
        borderColor: false,
        borderStyle: false,
        borderWidth: false
    },
    inactive: {
        backgroundColor: "transparent",
        borderStyle: "solid",
        borderWidth: "2px"
    },
    items: {
        status: {
            ACTIVE: 1,
            DISABLED: 0
        },
    },
    basedOn: {
        SERIES: "series",
        LABELS: "labels"
    }
};
/**
 * Tooltip options
 */
export var tooltip = {
    width: 200,
    arrowWidth: 10,
    magicXPoint2: 20,
    magicTop1: 21,
    magicTop2: 22,
    magicLeft1: 11,
    magicLeft2: 10,
    fadeIn: {
        duration: 250
    },
    fadeOut: {
        duration: 250
    },
    size: {
        COMPACT: "compact"
    }
};
/**
 * Base transition configuration
 */
export var transitions = {
    default: {
        duration: 750
    },
    pie_slice_hover: {
        duration: 100
    },
    pie_chart_titles: {
        duration: 375
    }
};
/**
 * Selectors to standardize querying parts of the chart
 */
export var selectors = {
    OUTERSVG: "svg.chart-svg",
    INNERWRAP: "g.inner-wrap",
    CHARTWRAPPER: "div.chart-wrapper",
    TOOLTIP: "div.chart-tooltip",
    LEGEND_BTN: "li.legend-btn",
    pie: {
        SLICE: "path"
    }
};
//# sourceMappingURL=/home/travis/build/carbon-design-system/carbon-charts/packages/core/configuration.js.map