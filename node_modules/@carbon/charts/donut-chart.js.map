{"version":3,"file":"donut-chart.js","sourceRoot":"","sources":["src/donut-chart.ts"],"names":[],"mappings":"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","sourcesContent":["// D3 Imports\nimport { select } from \"d3-selection\";\nimport { interpolateNumber } from \"d3-interpolate\";\n\nimport { PieChart } from \"./pie-chart\";\nimport * as Configuration from \"./configuration\";\nimport { ChartConfig, DonutChartOptions, ChartType } from \"./configuration\";\nimport { Tools } from \"./tools\";\n\nexport class DonutCenter {\n\tconfigs: any;\n\toldConfigs: any;\n\tdonutSVG: any;\n\n\tconstructor(configs: any) {\n\t\tif (configs) {\n\t\t\tthis.configs = configs;\n\n\t\t\t// Keep track of changes to the configs above\n\t\t\tthis.oldConfigs = Tools.merge({}, configs);\n\t\t} else {\n\t\t\tconsole.error(\"Configuration object is missing for DonutCenter\");\n\t\t}\n\t}\n\n\tdraw (innerWrap: any) {\n\t\t// Add the number shown in the center of the donut\n\t\tinnerWrap.append(\"text\")\n\t\t\t.attr(\"class\", \"donut-figure\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.text(this.configs.number.toLocaleString());\n\n\t\t// Add the label below the number in the center of the donut\n\t\tinnerWrap.append(\"text\")\n\t\t\t.attr(\"class\", \"donut-title\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"y\", Configuration.donut.centerText.title.y)\n\t\t\t.text(this.configs.label);\n\n\t\tthis.donutSVG = innerWrap;\n\t}\n\n\tupdate() {\n\t\tconst possiblyNewConfigs = this.configs;\n\t\t// If the configs are different from the previous update() call\n\t\tif (this.oldConfigs !== possiblyNewConfigs) {\n\t\t\tconst newNumber = this.configs.number;\n\t\t\t// Update center number\n\t\t\tthis.donutSVG.select(\"text.donut-figure\")\n\t\t\t\t.transition()\n\t\t\t\t.duration(Configuration.transitions.default.duration)\n\t\t\t\t.tween(\"text\", function() {\n\t\t\t\t\treturn donutCenterNumberTween(select(this), newNumber);\n\t\t\t\t});\n\n\t\t\t// Update center label\n\t\t\tthis.donutSVG.select(\"text.donut-title\")\n\t\t\t\t.text(this.configs.label);\n\n\t\t\t// Set the latest configs in record to keep track of future config updates\n\t\t\tthis.oldConfigs = Tools.merge({}, this.configs);\n\t\t}\n\t}\n\n\tresize(svgElement: any, actualChartSize: any) {\n\t\tconst dimensionToUseForScale = Math.min(actualChartSize.width, actualChartSize.height);\n\t\tconst { pie: pieConfigs } = Configuration;\n\t\tconst scaleRatio = dimensionToUseForScale / pieConfigs.maxWidth;\n\n\t\t// If the dimensions of the chart are smaller than a certain number (e.g. 175x175)\n\t\t// Resize the center text sizes\n\t\tif (dimensionToUseForScale < Configuration.donut.centerText.breakpoint) {\n\t\t\tsvgElement.select(\"text.donut-figure\")\n\t\t\t\t.style(\"font-size\",\n\t\t\t\t\tConfiguration.donut.centerText.numberFontSize * scaleRatio * Configuration.donut.centerText.magicScaleRatio + \"px\"\n\t\t\t\t);\n\n\t\t\tsvgElement.select(\"text.donut-title\")\n\t\t\t\t.style(\"font-size\", Configuration.donut.centerText.titleFontSize * scaleRatio * Configuration.donut.centerText.magicScaleRatio + \"px\")\n\t\t\t\t.attr(\"y\", Configuration.donut.centerText.title.y * scaleRatio * Configuration.donut.centerText.magicScaleRatio);\n\t\t}\n\t}\n}\n\nexport class DonutChart extends PieChart {\n\tcenter: DonutCenter;\n\n\toptions: DonutChartOptions;\n\n\tconstructor(holder: Element, configs: ChartConfig<DonutChartOptions>) {\n\t\tsuper(holder, configs, ChartType.DONUT);\n\t\t// Check if the DonutCenter object is provided\n\t\t// in the chart configurations\n\t\tconst { center, centerLabel, centerNumber } = configs.options;\n\n\t\t// TODO 1.0 - Remove deprecated API\n\t\tif (center || centerLabel || centerNumber) {\n\t\t\t// Set donut center configs\n\t\t\t// And instantiate the DonutCenter object\n\t\t\tconst donutCenterConfigs = this.getSuppliedCenterConfigs();\n\t\t\tthis.center = new DonutCenter(donutCenterConfigs);\n\t\t}\n\t}\n\n\tdraw() {\n\t\tsuper.draw();\n\n\t\t// Draw the center text\n\t\tif (this.center) {\n\t\t\t// Set donut center configs\n\t\t\tthis.setCenterConfigs();\n\n\t\t\tthis.center.draw(this.innerWrap);\n\t\t}\n\t}\n\n\tresizeChart() {\n\t\tif (this.innerWrap) {\n\t\t\t// Inherit resizing logic from PieChart\n\t\t\tsuper.resizeChart();\n\n\t\t\tif (this.center) {\n\t\t\t\t// Trigger resize on DonutCenter as well\n\t\t\t\tthis.center.resize(this.innerWrap, this.getChartSize(this.container));\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\n\t\tif (this.center) {\n\t\t\t// Set donut center configs\n\t\t\tthis.setCenterConfigs();\n\n\t\t\t// Update donut center\n\t\t\tthis.center.update();\n\t\t}\n\t}\n\n\tgetSuppliedCenterConfigs() {\n\t\t// TODO 1.0 - Remove deprecated API\n\t\tconst { center, centerLabel, centerNumber } = this.options;\n\t\tconst label = center ? center.label : centerLabel;\n\t\tlet number = center ? center.number : centerNumber;\n\n\t\t// TODO 1.0 - Remove deprecated API\n\t\t// Warn developer about deprecation\n\t\tif (centerLabel || centerNumber) {\n\t\t\tconsole.warn(\n\t\t\t\t\"`centerLabel` & `centerNumber` are deprecated and will be removed in v1.0, you should switch to\",\n\t\t\t\t{\n\t\t\t\t\tcenter: {\n\t\t\t\t\t\tlabel: \"test\",\n\t\t\t\t\t\tnumber: 10\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// If a number for donut center has not been provided\n\t\t// Use the sum of datapoints\n\t\tif (!number && this.displayData) {\n\t\t\tconst sumOfDatapoints = this.displayData.datasets[0].data.reduce((accum, currVal) => accum + currVal.value, 0);\n\t\t\tnumber = sumOfDatapoints;\n\t\t}\n\n\t\treturn {\n\t\t\tlabel,\n\t\t\tnumber\n\t\t};\n\t}\n\n\tsetCenterConfigs() {\n\t\tthis.center.configs = this.getSuppliedCenterConfigs();\n\t}\n}\n\nfunction donutCenterNumberTween(d3Ref, newNumber: number) {\n\t// Remove commas from the current value string, and convert to an int\n\tconst currentValue = parseInt(d3Ref.text().replace(/[, ]+/g, \"\"), 10);\n\tconst i = interpolateNumber(currentValue, newNumber);\n\n\tconst formatInterpolatedValue = number => Math.floor(number).toLocaleString();\n\n\treturn t => {\n\t\td3Ref.text(formatInterpolatedValue(i(t)));\n\t};\n}\n"]}