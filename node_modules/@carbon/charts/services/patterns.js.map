{"version":3,"file":"patterns.js","sourceRoot":"","sources":["../src/services/patterns.ts"],"names":[],"mappings":"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","sourcesContent":["// D3 Imports\nimport { select } from \"d3-selection\";\n\nimport PATTERN_SVGS from \"../assets/patterns/index\";\nimport * as Configuration from \"../configuration\";\n\nconst selectors = {\n\tPATTERNS_CONTAINER: \"carbon-charts-patterns\"\n};\n\n// Helper functions\nconst trimSVG = (htmlString: string) => {\n\t// Remove the CSS style block\n\tconst htmlBeforeStyleBlock = htmlString.substring(0, htmlString.indexOf(\"<style type=\\\"text/css\\\">\"));\n\tconst htmlAfterStyleBlock = htmlString.substring(htmlString.indexOf(\"</style>\") + \"</style>\".length);\n\n\thtmlString = htmlBeforeStyleBlock + htmlAfterStyleBlock;\n\n\t// Remove Adobe comments\n\thtmlString = htmlString.replace(/<!--[\\s\\S]*?-->/g, \"\");\n\n\treturn htmlString;\n};\n\nexport default class PatternsService {\n\tcontainer: any;\n\n\tpatternAccum = 0;\n\tidAccum = 0;\n\n\tpatternURLs = {};\n\n\tconstructor() {\n\t\tthis.setDiv();\n\t}\n\n\t/**\n\t * Sets the container div for pattern SVGs in DOM\n\t *\n\t * @memberof PatternsService\n\t */\n\tsetDiv() {\n\t\tthis.container = document.getElementById(selectors.PATTERNS_CONTAINER);\n\t\tif (!this.container) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.id = selectors.PATTERNS_CONTAINER;\n\n\t\t\tthis.container = document.body.appendChild(div);\n\t\t}\n\t}\n\n\t/**\n\t * Adds all the pattern SVGs to the container div, applying a unique ID to each one\n\t *\n\t * @memberof PatternsService\n\t */\n\taddPatternSVGs(d: any, colorScale: any, chartContainerID: string, legendType: string) {\n\t\tselect(this.container)\n\t\t\t.style(\"display\", \"table\")\n\t\t\t.style(\"max-height\", 0);\n\n\t\td.datasets.forEach(dataset => {\n\t\t\tlet datasetPattern: string;\n\n\t\t\tdataset.data.forEach((dataPoint, i) => {\n\t\t\t\tconst index = i + 1;\n\t\t\t\tconst id = ++this.idAccum;\n\n\t\t\t\tif (!datasetPattern || legendType === Configuration.legend.basedOn.LABELS) {\n\t\t\t\t\tdatasetPattern = PATTERN_SVGS[this.patternAccum++ % PATTERN_SVGS.length].default;\n\t\t\t\t}\n\n\t\t\t\t// Create SVG container div\n\t\t\t\tconst svgContainer = document.createElement(\"div\");\n\t\t\t\tsvgContainer.id = `carbon-${chartContainerID}-pattern-container-${id}`;\n\t\t\t\tsvgContainer.innerHTML = trimSVG(datasetPattern);\n\n\t\t\t\t// Apply id to the svg element\n\t\t\t\tconst mountedSVG = svgContainer.querySelector(\"svg\");\n\t\t\t\tmountedSVG.id = `carbon-${chartContainerID}-pattern-${id}-svg`;\n\n\t\t\t\t// Apply id to the pattern element\n\t\t\t\tconst patternElement = mountedSVG.querySelector(\"pattern\");\n\t\t\t\tpatternElement.id = `carbon-${chartContainerID}-pattern-${id}`;\n\n\t\t\t\t// Remove all IDs to avoid duplicate IDs (accessibility violation)\n\t\t\t\tmountedSVG.querySelector(\"g\").removeAttribute(\"id\");\n\n\t\t\t\t// Apply fills to everything\n\t\t\t\tconst allElementsInsideSVG = Array.prototype.slice.call(mountedSVG.querySelectorAll(\"pattern g *\"));\n\t\t\t\tallElementsInsideSVG.forEach((element, elementIndex) => {\n\t\t\t\t\tif (elementIndex > 0) {\n\t\t\t\t\t\telement.style.fill = colorScale[dataset.label](d.labels[i]);\n\t\t\t\t\t\telement.style.stroke = colorScale[dataset.label](d.labels[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.style.fill = \"transparent\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove ID to avoid duplicate IDs (accessibility violation)\n\t\t\t\t\telement.removeAttribute(\"id\");\n\t\t\t\t\telement.removeAttribute(\"class\");\n\t\t\t\t});\n\n\t\t\t\tconst allRectsInsideSVG = Array.prototype.slice.call(mountedSVG.querySelectorAll(\"rect\"));\n\t\t\t\tallRectsInsideSVG.forEach(rectElement => {\n\t\t\t\t\t// Remove all IDs to avoid duplicate IDs (accessibility violation)\n\t\t\t\t\trectElement.removeAttribute(\"id\");\n\t\t\t\t});\n\n\t\t\t\t// Update pattern widths & heights\n\t\t\t\tpatternElement.setAttribute(\"width\", `${Configuration.charts.patternFills.width}`);\n\t\t\t\tpatternElement.setAttribute(\"height\", `${Configuration.charts.patternFills.height}`);\n\n\t\t\t\tthis.container.appendChild(svgContainer);\n\n\t\t\t\t// Add pattern to the list of patterns\n\t\t\t\tconst patternURL = `url(#carbon-${chartContainerID}-pattern-${id})`;\n\t\t\t\tif (this.patternURLs[dataset.label]) {\n\t\t\t\t\tthis.patternURLs[dataset.label].push(patternURL);\n\t\t\t\t} else {\n\t\t\t\t\tthis.patternURLs[dataset.label] = [patternURL];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tgetFillValues() {\n\t\treturn this.patternURLs;\n\t}\n}\n"]}