import { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveCardinal, curveCardinalClosed, curveCardinalOpen, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore } from "d3-shape";
var curveTypes = {
    "curveLinear": curveLinear,
    "curveLinearClosed": curveLinearClosed,
    "curveBasis": curveBasis,
    "curveBasisClosed": curveBasisClosed,
    "curveBasisOpen": curveBasisOpen,
    "curveBundle": curveBundle,
    "curveCardinal": curveCardinal,
    "curveCardinalClosed": curveCardinalClosed,
    "curveCardinalOpen": curveCardinalOpen,
    "curveCatmullRom": curveCatmullRom,
    "curveCatmullRomClosed": curveCatmullRomClosed,
    "curveCatmullRomOpen": curveCatmullRomOpen,
    "curveMonotoneX": curveMonotoneX,
    "curveMonotoneY": curveMonotoneY,
    "curveNatural": curveNatural,
    "curveStep": curveStep,
    "curveStepAfter": curveStepAfter,
    "curveStepBefore": curveStepBefore
};
export var getD3Curve = function (curveName, curveOptions) {
    if (curveName === void 0) { curveName = "curveLinear"; }
    if (curveOptions === void 0) { curveOptions = {}; }
    if (curveTypes[curveName]) {
        var curve_1 = curveTypes[curveName];
        Object.keys(curveOptions).forEach(function (optionName) {
            if (curve_1[optionName]) {
                curve_1 = curve_1[optionName](curveOptions[optionName]);
            }
        });
        return curve_1;
    }
    return null;
};
//# sourceMappingURL=/home/travis/build/carbon-design-system/carbon-charts/packages/core/services/curves.js.map